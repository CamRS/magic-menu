// Fix 1: Main issue - Remove the form validity check in the button
// In HomePage.tsx (around line 674), change:
<Button
  type="submit"
  className="w-full"
  disabled={createMutation.isPending || updateMutation.isPending || !form.formState.isValid}
>
  {(createMutation.isPending || updateMutation.isPending) && (
    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
  )}
  {editingItem ? 'Update Item' : 'Add Item'}
</Button>

// To:
<Button
  type="submit"
  className="w-full"
  disabled={createMutation.isPending || updateMutation.isPending}
>
  {(createMutation.isPending || updateMutation.isPending) && (
    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
  )}
  {editingItem ? 'Update Item' : 'Add Item'}
</Button>

// Fix 2: In the useEffect for editingItem, ensure all values are properly formatted
// Around line 284, update this useEffect:
useEffect(() => {
  if (editingItem) {
    // Transform data to match form expectations and ensure correct types
    const formData = {
      ...editingItem,
      price: typeof editingItem.price === 'string' ? editingItem.price : editingItem.price.toString(),
      image: editingItem.image || "",
      customTags: editingItem.customTags || [],
      courseType: courseTypes.includes(editingItem.courseType) 
        ? editingItem.courseType 
        : "Appetizers",
      allergens: editingItem.allergens || {
        milk: false,
        eggs: false,
        peanuts: false,
        nuts: false,
        shellfish: false,
        fish: false,
        soy: false,
        gluten: false,
      },
    };
    form.reset(formData);
    setCreateMenuItemOpen(true);
  }
}, [editingItem, form]);

// Fix 3: Modify the handleSubmit function to ensure price is formatted correctly
// Around line 271, update:
const handleSubmit = (data: InsertMenuItem) => {
  // Format price to ensure it's valid
  const formattedData = {
    ...data,
    price: data.price.toString().replace(/[^\d.-]/g, ''),
    customTags: data.customTags || [],
  };
  
  if (editingItem) {
    const updateData = {
      ...formattedData,
      id: editingItem.id,
    };
    updateMutation.mutate(updateData);
  } else {
    createMutation.mutate(formattedData);
  }
};